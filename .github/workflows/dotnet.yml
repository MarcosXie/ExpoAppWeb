name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_LOCATION: ExpoApp/ExpoApp.Api.csproj
  ELASTIC_BEANSTALK_NAME: ExpoAppApi
  ELASTIC_BEANSTALK_ENV_NAME: ExpoAppApi-dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Update submodules
        run: git submodule update --init --recursive

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore $PROJECT_LOCATION
      - name: Build
        run: dotnet build --no-restore $PROJECT_LOCATION
      - name: Pack
        run: |
          dotnet publish $PROJECT_LOCATION -c Release --output "${{ github.workspace }}/${{github.run_id}}"
          cd ${{github.run_id}}
          zip -r ../${{github.run_id}}.zip .

      - name: Delete old artifacts
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          # Lista todos os artefatos do repositório
          artifacts=$(gh api -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/actions/artifacts | jq -r '.artifacts | sort_by(.created_at) | .[].id')
          
          # Conta o número total de artefatos
          total_artifacts=$(echo "$artifacts" | wc -l)
          
          # Calcula quantos artefatos devem ser mantidos (os 3 mais recentes)
          artifacts_to_keep=3
          
          # Se houver mais de 3 artefatos, exclui os mais antigos
          if [ $total_artifacts -gt $artifacts_to_keep ]; then
            artifacts_to_delete=$(echo "$artifacts" | head -n $(($total_artifacts - $artifacts_to_keep)))
            for artifact_id in $artifacts_to_delete; do
              echo "Deletando artefato ID: $artifact_id"
              gh api -X DELETE -H "Accept: application/vnd.github+json" \
                /repos/${{ github.repository }}/actions/artifacts/$artifact_id
            done
          else
            echo "Menos de $artifacts_to_keep artefatos encontrados, nada para deletar."
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4.3.3
        with: 
          name: deploy-files
          path: ${{github.run_id}}.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/download-artifact@v4.1.7
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Deploy
        run: |
          aws s3 cp "deploy-files/${{github.run_id}}.zip" s3://elasticbeanstalk-us-east-1-${{ secrets.AWS_ACCOUNT_ID }}/artifact/UExpoApi/
          aws elasticbeanstalk create-application-version --application-name $ELASTIC_BEANSTALK_NAME --version-label ${{github.run_id}} --description ${{github.run_id}} --source-bundle S3Bucket="elasticbeanstalk-us-east-1-${{ secrets.AWS_ACCOUNT_ID }}",S3Key="artifact/UExpoApi/${{github.run_id}}.zip"
          aws elasticbeanstalk update-environment --application-name $ELASTIC_BEANSTALK_NAME --environment-name $ELASTIC_BEANSTALK_ENV_NAME --version-label ${{github.run_id}}
          aws elasticbeanstalk wait environment-updated --application-name $ELASTIC_BEANSTALK_NAME --environment-name $ELASTIC_BEANSTALK_ENV_NAME