// <auto-generated />
using System;
using ExpoApp.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpoApp.Repository.Migrations
{
    [DbContext(typeof(ExpoAppDbContext))]
    [Migration("20241122221656_initial-create")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ExpoShared.Domain.Dao.AdminDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Lang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("admin_pkey");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("admin", (string)null);
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CallCenterChatDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AdminId")
                        .HasColumnType("char(36)");

                    b.Property<string>("AdminLang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserLang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id")
                        .HasName("call_center_pkey");

                    b.HasIndex("AdminId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("call_center_chat", (string)null);
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CallCenterMessageDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("File")
                        .HasColumnType("longtext");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<bool>("Readed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ReceiverLang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ResponsedMessageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SendedMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SenderLang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TranslatedMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("call_center_message_pkey");

                    b.HasIndex("ChatId");

                    b.ToTable("call_center_message", (string)null);
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CartDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BuyerLang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("BuyerUserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CartNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SupplierLang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("SupplierUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("cart_pkey");

                    b.HasIndex("BuyerUserId");

                    b.HasIndex("SupplierUserId");

                    b.ToTable("cart", (string)null);
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CartItemDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Annotation")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CartId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("JsonData")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<double>("Quantity")
                        .HasColumnType("double");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("cart_item_pkey");

                    b.HasIndex("CartId");

                    b.ToTable("cart_item", (string)null);
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CartMessageDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("File")
                        .HasColumnType("longtext");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<bool>("Readed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ReceiverLang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ResponsedMessageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SendedMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SenderLang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TranslatedMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("cart_message_pkey");

                    b.HasIndex("ChatId");

                    b.ToTable("cart_message", (string)null);
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CatalogDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("JsonTable")
                        .HasColumnType("longtext");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id")
                        .HasName("catalog_pkey");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("catalog", (string)null);
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CatalogItemImageDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CatalogId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id")
                        .HasName("catalog_item_image_pkey");

                    b.HasIndex("CatalogId");

                    b.ToTable("catalog_item_image", (string)null);
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CatalogPdfDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CatalogId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id")
                        .HasName("catalog_pdf_pkey");

                    b.HasIndex("CatalogId");

                    b.ToTable("catalog_pdf", (string)null);
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CatalogSegmentDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CalendarId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CalendarSegmentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CatalogId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("catalog_segment_pkey");

                    b.HasIndex("CatalogId");

                    b.ToTable("catalog_segment", (string)null);
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.RelationshipDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BuyerLang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BuyerMemo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("BuyerStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("BuyerUserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CalendarId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SupplierLang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SupplierMemo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SupplierStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("SupplierUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("relationship_pkey");

                    b.HasIndex("BuyerUserId");

                    b.HasIndex("SupplierUserId");

                    b.ToTable("relationship", (string)null);
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.RelationshipMessageDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("File")
                        .HasColumnType("longtext");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<bool>("Readed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ReceiverLang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ResponsedMessageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SendedMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SenderLang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TranslatedMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("relationship_message_pkey");

                    b.HasIndex("ChatId");

                    b.ToTable("relationship_message", (string)null);
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.SegmentDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("FairId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("segment_pkey");

                    b.ToTable("segment", (string)null);
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.TutorialDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Page")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id")
                        .HasName("tutorial_pkey");

                    b.ToTable("tutorial", (string)null);
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.UserDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Enterprise")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsEmailValidated")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Lang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProfileImageName")
                        .HasColumnType("longtext");

                    b.Property<string>("ProfileImageUri")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("user_pkey");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.UserImageDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id")
                        .HasName("user_image_pkey");

                    b.HasIndex("UserId");

                    b.ToTable("user_image", (string)null);
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CallCenterChatDao", b =>
                {
                    b.HasOne("ExpoShared.Domain.Dao.AdminDao", "Admin")
                        .WithMany("CallCenterChats")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ExpoShared.Domain.Dao.UserDao", "User")
                        .WithOne("CallCenterChat")
                        .HasForeignKey("ExpoShared.Domain.Dao.CallCenterChatDao", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CallCenterMessageDao", b =>
                {
                    b.HasOne("ExpoShared.Domain.Dao.CallCenterChatDao", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CartDao", b =>
                {
                    b.HasOne("ExpoShared.Domain.Dao.UserDao", "BuyerUser")
                        .WithMany("BuyerCarts")
                        .HasForeignKey("BuyerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpoShared.Domain.Dao.UserDao", "SupplierUser")
                        .WithMany("SupplierCarts")
                        .HasForeignKey("SupplierUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerUser");

                    b.Navigation("SupplierUser");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CartItemDao", b =>
                {
                    b.HasOne("ExpoShared.Domain.Dao.CartDao", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CartMessageDao", b =>
                {
                    b.HasOne("ExpoShared.Domain.Dao.CartDao", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CatalogDao", b =>
                {
                    b.HasOne("ExpoShared.Domain.Dao.UserDao", "User")
                        .WithOne("Catalog")
                        .HasForeignKey("ExpoShared.Domain.Dao.CatalogDao", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CatalogItemImageDao", b =>
                {
                    b.HasOne("ExpoShared.Domain.Dao.CatalogDao", "Catalog")
                        .WithMany("ItemImages")
                        .HasForeignKey("CatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalog");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CatalogPdfDao", b =>
                {
                    b.HasOne("ExpoShared.Domain.Dao.CatalogDao", "Catalog")
                        .WithMany("Pdfs")
                        .HasForeignKey("CatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalog");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CatalogSegmentDao", b =>
                {
                    b.HasOne("ExpoShared.Domain.Dao.CatalogDao", "Catalog")
                        .WithMany("Segments")
                        .HasForeignKey("CatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalog");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.RelationshipDao", b =>
                {
                    b.HasOne("ExpoShared.Domain.Dao.UserDao", "BuyerUser")
                        .WithMany("BuyerRelationships")
                        .HasForeignKey("BuyerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpoShared.Domain.Dao.UserDao", "SupplierUser")
                        .WithMany("SupplierRelationships")
                        .HasForeignKey("SupplierUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerUser");

                    b.Navigation("SupplierUser");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.RelationshipMessageDao", b =>
                {
                    b.HasOne("ExpoShared.Domain.Dao.RelationshipDao", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.UserImageDao", b =>
                {
                    b.HasOne("ExpoShared.Domain.Dao.UserDao", "User")
                        .WithMany("Images")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.AdminDao", b =>
                {
                    b.Navigation("CallCenterChats");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CallCenterChatDao", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CartDao", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.CatalogDao", b =>
                {
                    b.Navigation("ItemImages");

                    b.Navigation("Pdfs");

                    b.Navigation("Segments");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.RelationshipDao", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("ExpoShared.Domain.Dao.UserDao", b =>
                {
                    b.Navigation("BuyerCarts");

                    b.Navigation("BuyerRelationships");

                    b.Navigation("CallCenterChat");

                    b.Navigation("Catalog");

                    b.Navigation("Images");

                    b.Navigation("SupplierCarts");

                    b.Navigation("SupplierRelationships");
                });
#pragma warning restore 612, 618
        }
    }
}
